#开发环境配置
com.dyenigma.group=platform
com.dyenigma.project=transformer
com.dyenigma.path=E:/IDEACloud/transformer
com.dyenigma.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAId5H7MynEWZ34lVzXFF7sXqJRuu73EWYCBkstd6PoyNY/2kB8bQ+flu5UMS+VIaxvlra0DGSjRrq5wX0u3mIK0CAwEAAQ==
com.dyenigma.password=ZIqg9O4mFBEQiaGrbW8N1R9Rf96pwHXPB+rmDurc6ujGK8qDnKv2xnW88BnE8ocYakX398pEAAwopS7N3wKY8w==
server.port=8080
logging.level.root=debug

spring.mvc.throw-exception-if-no-handler-found=true
#静态资源映射，默认为true
spring.resources.add-mappings=true

##Druid连接池配置（多数据源读写分离，下面的命名规律要和DynamicDataSourceRegister类中配合，不能乱改）
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#主数据源写
spring.datasource.url=jdbc:mysql://localhost:3306/topic?characterEncoding=UTF-8
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=${com.dyenigma.password}

#多个[从数据源]读
spring.reader.names=slaveA,slaveB
spring.reader.slaveA.type=com.alibaba.druid.pool.DruidDataSource
spring.reader.slaveA.url=jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8
spring.reader.slaveA.driver-class-name=com.mysql.jdbc.Driver
spring.reader.slaveA.username=root
spring.reader.slaveA.password=${com.dyenigma.password}
spring.reader.slaveB.type=com.alibaba.druid.pool.DruidDataSource
spring.reader.slaveB.url=jdbc:mysql://localhost:3306/study?characterEncoding=UTF-8
spring.reader.slaveB.driver-class-name=com.mysql.jdbc.Driver
spring.reader.slaveB.username=root
spring.reader.slaveB.password=${com.dyenigma.password}

# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防SQL注入防火墙,mergeStat为合并Sql统计
spring.datasource.filters=mergeStat,wall,config,slf4j
# 也可以在下面打开合并sql统计功能：druid.stat.mergeSql=true;slowSqlMillis慢SQL记录,config.decrypt=true为数据库密码加密，同时要加上key
spring.datasource.connectionProperties=config.decrypt=true;config.decrypt.key=${com.dyenigma.publicKey};druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

#Mybatis配置，注意classpath的路径一定要正确，可以有多个classpath，前面用横杠独立对待
mybatis.type-aliases-package=com.dyenigma.entity
mybatis.mapper-locations=classpath:mapper/*.xml

#分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#FreeMarker配置
spring.freemarker.allow-request-override=false
spring.freemarker.cache=false
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false